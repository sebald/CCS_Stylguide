//
// Froms
// --------------------------------------------------


// Default (block)
// -------------------------

form {
	margin: 0 0 $baseLineHeight;
}

fieldset {
	padding: 0;
	margin: 0;
	border: 0;
}

legend {
	display: block;
	width: 100%;
	padding: 0;
	margin-bottom: $baseLineHeight;
	font-size: $legendFontSize;
    font-weight: bold;
	line-height: $legendFontSize;
	border: 0;
	border-bottom: 1px solid #e5e5e5;
}

// Set font for forms
label,
input,
button,
select,
textarea {
  @include font-shorthand($baseFontSize, normal, $baseLineHeight);
}
input,
button,
select,
textarea {
  font-family: $baseFontFamily; // And only set font-family here for those that need it (note the missing label element)
}

// Identify controls by their labels
label {
  display: block;
  margin-bottom: 5px;
}


// Form controls
// -------------------------

// Shared size and type resets
select,
textarea,
input[type="text"],
input[type="password"],
input[type="datetime"],
input[type="datetime-local"],
input[type="date"],
input[type="month"],
input[type="time"],
input[type="week"],
input[type="number"],
input[type="email"],
input[type="url"],
input[type="search"],
input[type="tel"],
input[type="color"],
.uneditable-input {
    display: inline-block;
    height: $baseLineHeight;
    padding: $inputPadding;
    margin-bottom: 9px;
    font-size: $baseFontSize;
    line-height: $baseLineHeight;
    color: $textColor;
    @include border-radius($inputBorderRadius);
}

// Reset appearance properties for textual inputs and textarea
// Declare width for legacy (can't be on input[type=*] selectors or it's too specific)
input,
textarea,
.uneditable-input {
  width: 206px; // plus 12px padding and 2px border
}
// Reset height since textareas have rows
textarea {
  height: auto;
}

// Everything else
textarea,
input[type="text"],
input[type="password"],
input[type="datetime"],
input[type="datetime-local"],
input[type="date"],
input[type="month"],
input[type="time"],
input[type="week"],
input[type="number"],
input[type="email"],
input[type="url"],
input[type="search"],
input[type="tel"],
input[type="color"],
.uneditable-input {
    background-color: $inputBackground;
    border: $inputBorderSize solid $inputBorderColor;
    @include transition(#{border linear .2s, box-shadow linear .2s});

    &:hover {
        border: $inputBorderSize solid darken($inputBorderColor, 10%);
        @include box-shadow("inset 0 0 3px rgba(0,0,0,0.2)");
        z-index: 2;
    }

    &:focus,
    &.focused {
        outline: none;
        border: $inputBorderSize solid $brandColor;
        @include box-shadow("inset 0 0 3px rgba(0,0,0,0.3)");
    }
}

// Position radios and checkboxes better
input[type="radio"],
input[type="checkbox"] {
    margin: 4px 0 0;
    *margin-top: 0; /* IE7 */
    margin-top: 1px \9; /* IE8-9 */
    line-height: normal;
    cursor: pointer;
}

// Reset width of input images, buttons, radios, checkboxes
input[type="file"],
input[type="image"],
input[type="submit"],
input[type="reset"],
input[type="button"],
input[type="radio"],
input[type="checkbox"] {
    width: auto; // Override of generic input selector
}

// Set the height of select and file controls to match text inputs
select,
input[type="file"] {
    height: 34px; /* In IE7, the height of the select element cannot be changed by height, only font-size */
    *margin-top: 4px; /* For IE7, add top margin to align select with labels */
    line-height: 34px;
    padding: $selectPadding;
}

// Make select elements obey height by applying a border
select {
    width: 220px; // default input width + 10px of padding that doesn't get applied
    border: $inputBorderSize solid $inputBorderColor;
    background-color: $inputBackground; // Chrome on Linux and Mobile Safari need background-color

    &:focus {
        outline: none;
        border: $inputBorderSize solid $brandColor;
        @include box-shadow("inset 0 1px 2px rgba(0,0,0,0.3)");
    }
}

// Make multiple select elements height not fixed
select[multiple],
select[size] {
    height: auto;
}

// Focus for file, radio, and checkbox
input[type="file"]:focus,
input[type="radio"]:focus,
input[type="checkbox"]:focus {
    @include tab-focus();
}


// Uneditable inputs
// -------------------------

// Make uneditable inputs look inactive
.uneditable-input,
.uneditable-textarea {
    color: lighten($black, 30%);
    background-color: darken($inputBackground, 1%);
    border-color: $inputBorderColor;
    @include box-shadow("inset 0 1px 2px rgba(0,0,0,.025)");
    cursor: not-allowed;
}

// For text that needs to appear as an input but should not be an input
.uneditable-input {
    overflow: hidden; // prevent text from wrapping, but still cut it off like an input does
    white-space: nowrap;
  background-color: darken($inputBackground, 5%);
  color: lighten($textColor, 40%);

  &:hover {
    @include box-shadow(none);
  }
}

// Make uneditable textareas behave like a textarea
.uneditable-textarea {
    width: auto;
    height: auto;
}

// Placeholder
// -------------------------

// Placeholder text gets special styles because when browsers invalidate entire lines if it doesnâ€™t understand a selector
input,
textarea {
    @include placeholder();
}


// FORM FIELD FEEDBACK STATES
// --------------------------

.control-group.error {
  @include formFieldState($errorTextColor, $errorBorderColor, $errorBackground);
}

// Checkboxes + radios
// -------------------

// Indent the labels to position radios/checkboxes as hanging
.radio,
.checkbox {
    min-height: 18px; // clear the floating input if there is no label text
    padding-left: $textCheckRadioOffset;
}
.radio input[type="radio"],
.checkbox input[type="checkbox"] {
    float: left;
    margin: $checkRadioMarginTop 0 0 #{-$textCheckRadioOffset};
}

// Move the options list down to align with labels
.controls > .radio:first-child,
.controls > .checkbox:first-child {
    padding-top: 5px; // has to be padding because margin collaspes
}

// Radios and checkboxes on same line
// TODO v3: Convert .inline to .control-inline
.radio.inline,
.checkbox.inline {
    display: inline-block;
    padding-top: 5px;
    margin-bottom: 0;
    vertical-align: middle;
}
.radio.inline + .radio.inline,
.checkbox.inline + .checkbox.inline {
    margin-left: 10px; // space out consecutive inline controls
}


// Input sizes
// -----------

// Grid style input sizes
input[class*="span"],
select[class*="span"],
textarea[class*="span"],
.uneditable-input[class*="span"] {
    float: none;
    margin-left: 0;
}
// Ensure input-prepend/append never wraps
.input-append input[class*="span"],
.input-append .uneditable-input[class*="span"],
.input-prepend input[class*="span"],
.input-prepend .uneditable-input[class*="span"] {
    display: inline-block;
}

// Grid sizes
@include grid-input($gridColumnWidth, $gridGutterWidth);

// Control row for multiple inputs per line
.controls-row {
    @include clearfix(); // Clear the float from controls
}
.controls-row [class*="span"] {
    float: left; // Float to collapse white-space for proper grid alignment
}

// Disabled state
// --------------

// Disabled and read-only inputs
input[disabled],
select[disabled],
textarea[disabled],
input[readonly],
select[readonly],
textarea[readonly] {
    cursor: not-allowed;
    background-color: $inputDisabledBackground;
}
// Explicitly reset the colors here
input[type="radio"][disabled],
input[type="checkbox"][disabled],
input[type="radio"][readonly],
input[type="checkbox"][readonly] {
    background-color: transparent;
}


// HORIZONTAL & VERTICAL FORMS
// ---------------------------

.form-inline,
.form-horizontal {
  input,
  textarea,
  select,
  .uneditable-input,
  .input-prepend,
  .input-append {
    display: inline-block;
    @include ie7-inline-block();
    margin-bottom: 0;
    vertical-align: middle;
  }
  // Re-hide hidden elements due to specifity
  .hide {
    display: none;
  }
}
.form-inline label,
.form-inline .btn-group {
  display: inline-block;
}
// Remove margin for input-prepend/-append
.form-inline .input-append,
.form-inline .input-prepend {
  margin-bottom: 0;
}
// Inline checkbox/radio labels (remove padding on left)
.form-inline .radio,
.form-inline .checkbox {
  padding-left: 0;
  margin-bottom: 0;
  vertical-align: middle;
}
// Remove float and margin, set to inline-block
.form-inline .radio input[type="radio"],
.form-inline .checkbox input[type="checkbox"] {
  float: left;
  margin-right: 3px;
  margin-left: 0;
}

// Margin to space out fieldsets
.control-group {
  margin-bottom: $baseLineHeight / 2;
}

// Legend collapses margin, so next element is responsible for spacing
legend + .control-group {
  margin-top: $baseLineHeight;
  -webkit-margin-top-collapse: separate;
}

// Horizontal-specific styles
// --------------------------

.form-horizontal {
    // Increase spacing between groups
    .control-group {
        margin-bottom: $baseLineHeight;
        @include clearfix();
    }
    // Float the labels left
    .control-label {
        float: left;
        width: $horizontalLabelWidth;
        padding-top: 5px;
        text-align: right;
    }
    // Move over all input controls and content
    .controls {
    // Super jank IE7 fix to ensure the inputs in .input-append and input-prepend
    // don't inherit the margin of the parent, in this case .controls
    *display: inline-block;
    *padding-left: 20px;
    margin-left: $horizontalComponentOffset;
    *margin-left: 0;
        &:first-child {
            *padding-left: $horizontalComponentOffset;
        }
    }
    // make form fields take the rest of column width
    input,
    select {
        max-width: 100%;
        @include box-sizing(border-box);
        height: 34px;
        line-height: 34px;
    }
}


// Pre-/append inputs
// ---------------------------

// Allow us to put symbols and text within the input field for a cleaner look
.input-append,
.input-prepend {
  margin-bottom: 5px;
  font-size: 0;
  white-space: nowrap; // Prevent span and input from separating

  input,
  select,
  .uneditable-input {
    position: relative; // placed here by default so that on :focus we can place the input above the .add-on for full border and box-shadow goodness
    margin-bottom: 0; // prevent bottom margin from screwing up alignment in stacked forms
    *margin-left: 0;
    font-size: $baseFontSize;
    vertical-align: top;
    @include border-radius(0 $inputBorderRadius $inputBorderRadius 0);
    // Make input on top when focused so blue border and shadow always show
    &:focus {
      z-index: 2;
    }
  }
  .add-on {
    display: inline-block;
    width: auto;
    height: $baseLineHeight;
    min-width: 16px;
    padding: 5px 5px 3px;
    font-size: $baseFontSize;
    font-weight: normal;
    line-height: $baseLineHeight;
    text-align: center;
    //text-shadow: 0 1px 0 $white;
    @include gradient-vertical($addonAccentBackgroundColor, $addonBackgroundColor);
    border: $inputBorderSize solid $inputBorderColor;
  }
  .add-on,
  .btn {
    vertical-align: top;
    @include border-radius(0);
  }
}

.input-prepend {
  .add-on,
  .btn {
    margin-right: -1px;
  }
  .add-on:first-child,
  .btn:first-child {
    @include border-radius($inputBorderRadius 0 0 $inputBorderRadius);
  }
}

.input-append {
  input,
  select,
  .uneditable-input {
    @include border-radius($inputBorderRadius 0 0 $inputBorderRadius);
  }
  .add-on,
  .btn {
    margin-left: -1px;
  }
  .add-on:last-child,
  .btn:last-child {
    @include border-radius(0 $inputBorderRadius $inputBorderRadius 0);
  }
}

// Remove all border-radius for inputs with both prepend and append
.input-prepend.input-append {
  input,
  select,
  .uneditable-input {
    @include border-radius(0);
  }
  .add-on:first-child,
  .btn:first-child {
    margin-right: -1px;
    @include border-radius($inputBorderRadius 0 0 $inputBorderRadius);
  }
  .add-on:last-child,
  .btn:last-child {
    margin-left: -1px;
    @include border-radius(0 $inputBorderRadius $inputBorderRadius 0);
  }
}
